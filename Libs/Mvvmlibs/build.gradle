apply plugin: 'com.android.library'
apply plugin:'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'//添加apt命令

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode VERSION_CODE.toInteger()
        versionName "${VERSION_NAME}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding{
        enabled true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:${BUILD_TOOLS_VERSION}"
    compile "com.android.support:design:${BUILD_TOOLS_VERSION}"
    testCompile 'junit:junit:4.12'
    compile "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT_VERSION}"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0"
    compile "com.google.code.gson:gson:${GSON_VERSION}"
    compile "io.reactivex.rxjava2:rxjava:${RXANDROID_VERSION}"
    compile "io.reactivex.rxjava2:rxandroid:${RXJAVA_VERSION}"
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:+'
    provided "com.google.dagger:dagger-compiler:${DAGGER_VERSION}" //指定注解处理器
    compile "com.google.dagger:dagger:${DAGGER_VERSION}"  //dagger公用api
    provided 'org.glassfish:javax.annotation:10.0-b28'  //添加android缺失的部分javax注解
    compile project(':Libs:ResLibs')
    compile project(":Libs:UtilLibs")
}
